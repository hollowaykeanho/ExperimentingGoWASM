[Metadata]
Name = 'Go'
Description = """
Using Go test to test out all the Go codes in this repository.
"""




[Variables]
Timeout = '14400s'
GoPackage = 'wasmExpGo'
Recursive = false
TestReportFilename = 'go-test-report'
CoverageReportFilename = 'go-test-coverage'
ProfileDataFile = 'go-profile.txt'  # with extension

[FMTVariables]
TestPath = '{{- .BaseDir -}}/{{- .GoPackage -}}'
ReportPath = '{{- .BaseDir -}}/{{- .GoPackage -}}'
ProfileFilepath = '{{- .WorkingDir -}}/{{- .ProfileDataFile -}}'
CoverageFilepath = '{{- .BaseDir -}}/{{- .GoPackage -}}/{{- .CoverageReportFilename -}}.html'
TestPackage = '{{- .BaseDir -}}/{{- .GoPackage -}}{{- if .Recursive -}}/...{{- end -}}'
ConstraintTags = '' # seprated by comma
TestCoverage = '' # will be overwritten by [CMD]
TestVerdict = '' # will be overwritten by [CMD]




[[Dependencies]]
Name = 'Go'
Condition = 'all-all'
Type = 'command'
Command = 'go'




[[CMD]]
Name = "Create Test Directory For Housing Test Data"
Type = 'create-path'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}'

[[CMD]]
Name = "Run Go Test Against Base Directory"
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """go test -timeout "{{ .Timeout }}" \
{{- if .ConstraintTags }} -tags {{ .ConstraintTags -}} {{- end }} \
-coverprofile "{{- .ProfileFilepath -}}" \
-race \
-v \
"{{- .TestPackage -}}"
"""
Save = 'TestVerdict'
SaveRegex = '(FAIL)\s*$'

[[CMD]]
Name = "Process Go Test Coverage Profiles"
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """go tool cover -html="{{- .ProfileFilepath -}}" \
	-o "{{- .CoverageFilepath -}}"
"""

[[CMD]]
Name = 'Process Go Test Coverage Overall Percentage'
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """go tool cover \
-func "{{- .ProfileFilepath -}}"
"""
Save = 'TestCoverage'
SaveRegex = 'total:\s{1,}\(statements\)\s{1,}(\d+.\d+)%'
ToSTDOUT = 'TOTAL TEST COVERAGE: {{ .TestCoverage -}}%%'

[[CMD]]
Name = 'Delete Go Test Report TOML Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.toml'

[[CMD]]
Name = 'Script Go Test Report TOML Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
[Result]
Architecture = "{{- .Arch -}}"
OS = "{{- .OS -}}"
System = "{{- .ComputeSystem -}}"
Coverage = "{{- .TestCoverage -}}%"
Passed = {{ eq .TestVerdict "" }}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.toml'

[[CMD]]
Name = 'Delete Go Test Report JSON Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.json'

[[CMD]]
Name = 'Script Go Test Report JSON Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
{
	"Result": {
		"Architecture": "{{- .Arch -}}",
		"OS": "{{- .OS -}}",
		"System": "{{- .ComputeSystem -}}",
		"Coverage": "{{- .TestCoverage -}}%",
		"Passed": {{ eq .TestVerdict "" }}
	}
}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.json'

[[CMD]]
Name = 'Delete Go Test Report YAML Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.yaml'

[[CMD]]
Name = 'Script Go Test Report JSON Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
Result:
  Architecture: {{ .Arch }}
  OS: {{ .OS }}
  System: {{ .ComputeSystem }}
  Coverage: {{ .TestCoverage }}%
  Passed: {{ eq .TestVerdict "" }}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.yaml'

[[CMD]]
Name = 'Conclude The Test'
Type = 'is-equal'
Condition = [ 'all-all' ]
Source = '{{- .TestVerdict -}}'
Target = ''
