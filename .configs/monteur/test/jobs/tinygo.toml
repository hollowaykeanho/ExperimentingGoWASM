[Metadata]
Name = 'TinyGo'
Description = """
Using TinyGo test to test out one or all the Go package(s) in this repository.
"""




[Variables]
GoPackage = 'wasmExpGo'
Recursive = false
TestReportFilename = 'tinygo-test-report'

[FMTVariables]
TestPath = '{{- .BaseDir -}}/{{- .GoPackage -}}'
ReportPath = '{{- .BaseDir -}}/{{- .GoPackage -}}'
TestPackage = '{{- .BaseDir -}}/{{- .GoPackage -}}{{- if .Recursive -}}/...{{- end -}}'
ConstraintTags = 'whatever core' # seprated by space
TestCoverage = '???' # will be overwritten by [CMD]
TestVerdict = '' # will be overwritten by [CMD]




[[Dependencies]]
Name = 'TinyGo'
Condition = 'all-all'
Type = 'command'
Command = 'tinygo'




[[CMD]]
Name = "Create Test Directory For Housing Test Data"
Type = 'create-path'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}'

[[CMD]]
Name = "Run TinyGo Test Against Base Directory"
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """tinygo test \
{{- if .ConstraintTags }} -tags "{{- .ConstraintTags -}}" {{- end }} \
-print-allocs=. \
-v \
"{{- .TestPackage -}}"
"""
Save = 'TestVerdict'
SaveRegex = '(FAIL)\s*$'

[[CMD]]
Name = 'Delete TinyGo Test Report TOML Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.toml'

[[CMD]]
Name = 'Script TinyGo Test Report TOML Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
[Result]
Architecture = "{{- .Arch -}}"
OS = "{{- .OS -}}"
System = "{{- .ComputeSystem -}}"
Coverage = "{{- .TestCoverage -}}"
Passed = {{ eq .TestVerdict "" }}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.toml'

[[CMD]]
Name = 'Delete TinyGo Test Report JSON Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.json'

[[CMD]]
Name = 'Script Go Test Report JSON Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
{
	"Result": {
		"Architecture": "{{- .Arch -}}",
		"OS": "{{- .OS -}}",
		"System": "{{- .ComputeSystem -}}",
		"Coverage": "{{- .TestCoverage -}}",
		"Passed": {{ eq .TestVerdict "" }}
	}
}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.json'

[[CMD]]
Name = 'Delete TinyGo Test Report YAML Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.yaml'

[[CMD]]
Name = 'Script TinyGo Test Report YAML Data File'
Type = 'script'
Condition = [ 'all-all' ]
Location = '{{- .TestPath -}}'
Source = """
Result:
  Architecture: {{ .Arch }}
  OS: {{ .OS }}
  System: {{ .ComputeSystem }}
  Coverage: {{ .TestCoverage }}
  Passed: {{ eq .TestVerdict "" }}
"""
Target = '{{- .ReportPath -}}/{{- .TestReportFilename -}}.yaml'

[[CMD]]
Name = 'Conclude The Test'
Type = 'is-equal'
Condition = [ 'all-all' ]
Source = '{{- .TestVerdict -}}'
Target = ''
